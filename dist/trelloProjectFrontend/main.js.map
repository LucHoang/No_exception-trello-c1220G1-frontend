{"version":3,"sources":["./src/app/card/comment/comment.component.html","./src/app/card/comment/comment.component.ts","./src/app/service/mediaFile/media-file.service.ts","./src/app/service/labelService/label.service.ts","./src/app/service/cardService/card.service.ts","./src/app/labels/labels.module.ts","./src/app/service/boardService/board.service.ts","./src/app/board/list-board-tag-user/list-board-tag-user.component.html","./src/app/board/list-board-tag-user/list-board-tag-user.component.ts","./src/app/form-login/edit-password/edit-password.component.ts","./src/app/form-login/edit-password/edit-password.component.html","./src/app/card/show-tag-user-card/show-tag-user-card.component.html","./src/app/card/show-tag-user-card/show-tag-user-card.component.ts","./src/app/board/create/create.component.ts","./src/app/board/create/create.component.html","./src/environments/environment.ts","./src/app/helper/error.interceptor.ts","./src/app/list/show-list/show-list.component.ts","./src/app/list/show-list/show-list.component.html","./src/app/service/authenServie/authen.service.ts","./src/app/helper/jwt.interceptor.ts","./src/app/list/edit-title-list/edit-title-list.component.ts","./src/app/list/edit-title-list/edit-title-list.component.html","./src/app/labels/create-label/create-label.component.ts","./src/app/labels/create-label/create-label.component.html","./src/app/form-login/form-login.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/card/add-member-for-card/add-member-for-card.component.ts","./src/app/card/add-member-for-card/add-member-for-card.component.html","./src/app/list/list.module.ts","./src/app/form-login/login/login.component.ts","./src/app/form-login/login/login.component.html","./src/app/app.module.ts","./src/app/board/tag-user-board/tag-user-board.component.html","./src/app/board/tag-user-board/tag-user-board.component.ts","./src/app/list/filter-card-user/filter-card-user.component.html","./src/app/list/filter-card-user/filter-card-user.component.ts","./src/app/form-login/form-login-routing.module.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/board/list-board-app-user/list-board-app-user.component.html","./src/app/board/list-board-app-user/list-board-app-user.component.ts","./src/app/card/card.module.ts","./src/app/labels/labels-routing.module.ts","./src/app/service/loginService/login-service.service.ts","./src/app/card/create-card/create-card.component.ts","./src/app/card/create-card/create-card.component.html","./src/app/list/detail-list/detail-list.component.ts","./src/app/list/detail-list/detail-list.component.html","./src/app/card/card-routing.module.ts","./src/app/list/list-routing.module.ts","./src/app/card/edit-card/edit-card.component.ts","./src/app/card/edit-card/edit-card.component.html","./src/app/service/listService/list.service.ts","./src/app/card/detail-card/detail-card.component.ts","./src/app/card/detail-card/detail-card.component.html","./src/app/board/home/home.component.html","./src/app/board/home/home.component.ts","./src/app/card/search-card/search-card.component.html","./src/app/card/search-card/search-card.component.ts","./src/app/board/board.module.ts","./src/app/form-login/register/register.component.ts","./src/app/form-login/register/register.component.html","./src/app/service/user/user.service.ts","./src/app/list/create-list/create-list.component.ts","./src/app/list/create-list/create-list.component.html","./src/app/list/filter-card-label/filter-card-label.component.html","./src/app/list/filter-card-label/filter-card-label.component.ts","./src/app/board/board-routing.module.ts","./src/app/service/notificationService/noticfication.service.ts","./src/app/form-login/log-out/log-out.component.ts","./src/app/form-login/log-out/log-out.component.html","./src/app/app-routing.module.ts","./src/app/service/commentService/comment.service.ts","./src/app/card/show-card-by-list-id/show-card-by-list-id.component.ts","./src/app/card/show-card-by-list-id/show-card-by-list-id.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"form-group\">\r\n  <label for=\"comment\">Comment:</label>\r\n  <textarea [(ngModel)]=\"comment.content\" name=\"content\" class=\"form-control\" rows=\"5\" id=\"comment\"></textarea>\r\n  <br><br>\r\n  <button (click)=\"createComment()\" type=\"button\">Comment</button>\r\n  <hr>\r\n</div>\r\n<div *ngFor=\"let comments of listComment\">\r\n  <p style=\"color: #2af598\">{{comments.appUser?.userName}} bình luận </p>\r\n  <p><i>{{comments.content}}</i></p>\r\n</div>\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {IUser} from \"../../interface/i-user\";\r\nimport {IComment} from \"../../interface/i-comment\";\r\nimport {CommentService} from \"../../service/commentService/comment.service\";\r\nimport {CardService} from \"../../service/cardService/card.service\";\r\nimport {AuthenService} from \"../../service/authenServie/authen.service\";\r\nimport {ICard} from '../../interface/i-card';\r\nimport {INotification} from '../../interface/i-notification';\r\nimport {NoticficationService} from '../../service/notificationService/noticfication.service';\r\n\r\n@Component({\r\n  selector: 'app-comment',\r\n  templateUrl: './comment.component.html',\r\n  styleUrls: ['./comment.component.scss']\r\n})\r\nexport class CommentComponent implements OnInit {\r\n  @Input()\r\n  card_id: number = 0;\r\n  content: string =\"\";\r\n  appUser: IUser ={};\r\n  comment: IComment = {};\r\n  listComment:IComment[] = [];\r\n  card: ICard ={};\r\n  constructor(private commentService:CommentService,private cardService:CardService,\r\n              private authenService:AuthenService,private noticficationService: NoticficationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardService.findCardById(this.card_id).subscribe(data=>{\r\n      this.comment.card = data;\r\n      this.card = data;\r\n    })\r\n    this.getAllComment(this.card_id);\r\n  }\r\n  getAllComment(id: number){\r\n    this.commentService.getAllComment(id).subscribe(result =>{\r\n      this.listComment = result;\r\n      console.log(this.listComment);\r\n    })\r\n  }\r\n  createComment(){\r\n    this.commentService.createComment(this.comment).subscribe(()=>{\r\n      console.log(\"tạo mới thành công\");\r\n      this.getAllComment(this.card_id);\r\n      this.createNotification();\r\n    })\r\n    this.comment.content = \"\";\r\n  }\r\n  createNotification(){\r\n    // @ts-ignore\r\n    this.noticficationService.getUsersByBoard(this.card.list.board?.id).subscribe(users => {\r\n      let userList = this.noticficationService.getListNoticeUser(users);\r\n      let notification: INotification = {\r\n        content: this.authenService.currentUserValue.username + \" comment on : \" + this.card.title,\r\n        appUser: userList\r\n      }\r\n      console.log(notification)\r\n      this.noticficationService.createNotification(notification);\r\n\r\n    })\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '../../../environments/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {IMediaFile} from '../../interface/media-file';\r\nconst URL_BACKEND = environment.api_url\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MediaFileService {\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n  getMediaFilesByCardId(id: number): Observable<IMediaFile[]>{\r\n    return this.httpClient.get<IMediaFile[]>(URL_BACKEND + \"mediafile/findByCard/\"+id);\r\n  }\r\n  createMediaFile(mediaFile: IMediaFile): Observable<any>{\r\n    return this.httpClient.post(URL_BACKEND + \"mediafile/create\", mediaFile);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../../environments/environment';\r\nimport {Observable} from 'rxjs';\r\nimport {ILabel} from '../../interface/label';\r\nimport {ICardLabel} from '../../interface/icard-label';\r\nconst URL_BACKEND = environment.api_url\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LabelService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  getListSelected(card_id:number): Observable<ILabel[]>{\r\n    return this.httpClient.get<ILabel[]>(URL_BACKEND+\"labels/selected/\" + card_id);\r\n  }\r\n  getLabelsByCard(card_id:number): Observable<ILabel[]>{\r\n    return this.httpClient.get<ILabel[]>(URL_BACKEND + \"labels/card/\"+ card_id);\r\n  }\r\n  addLabelToCard(card_label: ICardLabel):Observable<any>{\r\n    return this.httpClient.post(URL_BACKEND +\"labels/addLabelToCard\", card_label);\r\n  }\r\n  getAllLabel(): Observable<any>{\r\n    return this.httpClient.get(URL_BACKEND+\"labels\");\r\n  }\r\n}\r\n","import {Injectable, Input} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ICard} from '../../interface/i-card';\r\nimport {environment} from '../../../environments/environment';\r\nconst URL_BACKEND = environment.api_url + \"cards/\"\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CardService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  findCardsByListId(id: number): Observable<ICard[]>{\r\n    return this.httpClient.get<ICard[]>(URL_BACKEND + \"list/\" + id);\r\n  }\r\n  changePositionCard(cards: ICard[]): Observable<any>{\r\n    return this.httpClient.put(URL_BACKEND + \"changePosition\", cards);\r\n  }\r\n  editCard(id: number, card: ICard): Observable<any>{\r\n    return this.httpClient.put(URL_BACKEND + \"edit/\" + id, card);\r\n  }\r\n  findCardById(id: number): Observable<ICard>{\r\n    return this.httpClient.get<ICard>(URL_BACKEND + id);\r\n  }\r\n  createCard(card: ICard): Observable<any>{\r\n    return this.httpClient.post(URL_BACKEND + \"create\",card);\r\n  }\r\n  showAllCard():Observable<any>{\r\n    return this.httpClient.get(URL_BACKEND);\r\n  }\r\n  getCardByLabel(id:number, labelId: number):Observable<any>{\r\n    return this.httpClient.get(URL_BACKEND+\"label/\"+id+\"?labelId=\"+ labelId);\r\n  }\r\n  getCardByUser(id:number, userId: number): Observable<any>{\r\n    return this.httpClient.get(URL_BACKEND+\"search/\"+id+\"?userId=\"+userId);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LabelsRoutingModule } from './labels-routing.module';\r\nimport { CreateLabelComponent } from './create-label/create-label.component';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CreateLabelComponent\r\n    ],\r\n    exports: [\r\n        CreateLabelComponent\r\n    ],\r\n  imports: [\r\n    CommonModule,\r\n    LabelsRoutingModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class LabelsModule { }\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {IBoard} from \"../../interface/i-board\";\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {Tag_user_board} from \"../../interface/ITagUserBoard\";\r\nimport {IUser} from \"../../interface/i-user\";\r\n\r\nconst API_BACKEND = environment.api_url;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BoardService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  showALl(): Observable<IBoard[]> {\r\n    return this.httpClient.get<IBoard[]>(API_BACKEND + 'board');\r\n  }\r\n\r\n\r\n  getBoarById(id: number): Observable<any> {\r\n    return this.httpClient.get<IBoard>(API_BACKEND + \"board/findBoardById/\" + id);\r\n  }\r\n  findBoarById(id: number): Observable<any> {\r\n    return this.httpClient.get<IBoard>(API_BACKEND + 'board/findBoardById/' + id);\r\n  }\r\n\r\n  getAllBoardByAppUser(id: number): Observable<IBoard[]> {\r\n    // @ts-ignore\r\n    return this.httpClient.get<Board[]>(API_BACKEND + 'board/listAppBoard/' + id);\r\n  }\r\n\r\n  createBoard(board: IBoard): Observable<IBoard> {\r\n    return this.httpClient.post<IBoard>(API_BACKEND + 'board/create', board);\r\n  }\r\n\r\n  getBoardTagUser(id: number): Observable<IBoard[]> {\r\n    return this.httpClient.get<IBoard[]>(API_BACKEND + 'board/listBoardTagUser/' + id);\r\n  }\r\n\r\n  createTagUserBoard(tagUserBoard: Tag_user_board): Observable<Tag_user_board> {\r\n    return this.httpClient.post<Tag_user_board>(API_BACKEND + 'boardAppUser/create', tagUserBoard);\r\n  }\r\n\r\n  showAllAppUser(): Observable<IUser[]> {\r\n    return this.httpClient.get<IUser[]>(API_BACKEND + 'list');\r\n  }\r\n  showAllTagUser(): Observable<Tag_user_board[]> {\r\n    return this.httpClient.get<Tag_user_board[]>(API_BACKEND + 'tagUser');\r\n  }\r\n  getListUserTag(board_id : number): Observable<IUser[]>{\r\n    return this.httpClient.get<IUser[]>(API_BACKEND + \"boardAppUser/list/\" + board_id);\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n  <table class=\"table table-striped\">\r\n    <tr>\r\n      <td>NAME</td>\r\n    </tr>\r\n    <tr *ngFor=\"let b of boards\">\r\n      <td ><a routerLink=\"/board/{{b.id}}\">{{b.name}}</a></td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IBoard} from \"../../interface/i-board\";\r\nimport {BoardService} from \"../../service/boardService/board.service\";\r\nimport {ActivatedRoute, ParamMap, Router} from \"@angular/router\";\r\nimport {AuthenService} from \"../../service/authenServie/authen.service\";\r\n\r\n@Component({\r\n  selector: 'app-list-board-tag-user',\r\n  templateUrl: './list-board-tag-user.component.html',\r\n  styleUrls: ['./list-board-tag-user.component.scss']\r\n})\r\nexport class ListBoardTagUserComponent implements OnInit {\r\n  boards: IBoard[] = [\r\n  ];\r\n  id = 0;\r\n\r\n  constructor(private boardService: BoardService,\r\n              private router: Router,\r\n              private authenService: AuthenService) {\r\n  }\r\n  findAllBoard_tagUser() {\r\n    let id = this.authenService.currentUserValue.id;\r\n    if (id != null) {\r\n      this.boardService.getBoardTagUser(id).subscribe(boards => {\r\n        this.boards = boards;\r\n      });\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n    this.findAllBoard_tagUser();\r\n  }\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {LoginServiceService} from '../../service/loginService/login-service.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ILogin} from '../../interface/ilogin';\r\nimport {UserService} from '../../service/user/user.service';\r\nimport {AuthenService} from '../../service/authenServie/authen.service';\r\nimport {Observable} from 'rxjs';\r\nimport {AngularFireStorage} from '@angular/fire/storage';\r\nimport {finalize} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-edit-password',\r\n  templateUrl: './edit-password.component.html',\r\n  styleUrls: ['./edit-password.component.scss']\r\n})\r\nexport class EditPasswordComponent implements OnInit {\r\n  // @ts-ignore\r\n  selectedFile: File = null;\r\n  // @ts-ignore\r\n  downloadURL: Observable<string>;\r\n  appUser: ILogin = {\r\n    id: 0,\r\n    avatar: '',\r\n    email: '',\r\n    userName: '',\r\n    passWord: '',\r\n    role: [],\r\n    oldPassWord: '',\r\n    newPassWord: ''\r\n  };\r\n  message: string = 'Old password incorrect, please try again';\r\n  isPasswordCorrect: boolean = false;\r\n  id: number = 0;\r\n  constructor(private userService: UserService, private router: Router, private activatedRoute: ActivatedRoute,\r\n              private storage: AngularFireStorage) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.activatedRoute.paramMap.subscribe(paraMap =>{\r\n        this.id = Number (paraMap.get(\"id\"));\r\n        this.userService.findUserById(this.id).subscribe(data =>{\r\n          this.appUser = data\r\n        })\r\n      }\r\n    );\r\n  }\r\n  onFileSelected(event: any) {\r\n    let n = Date.now();\r\n    const file = event.target.files[0];\r\n    const filePath = `trelloFIle/${n}`;\r\n    const fileRef = this.storage.ref(filePath);\r\n    const task = this.storage.upload(filePath, file);\r\n    task\r\n      .snapshotChanges()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.downloadURL = fileRef.getDownloadURL();\r\n          this.downloadURL.subscribe(url => {\r\n            if (url) {\r\n              this.appUser.avatar = url;\r\n            }\r\n          });\r\n        })\r\n      ).subscribe(url => {\r\n      if (url) {\r\n        console.log(\"Upload success\");\r\n      }\r\n    });\r\n  }\r\n  editUser(){\r\n    this.userService.editAppUser(this.appUser,this.id).subscribe(()=>{\r\n      this.router.navigateByUrl(\"/\");\r\n      this.isPasswordCorrect = false;\r\n    }, error => {\r\n      this.isPasswordCorrect = true\r\n    })\r\n  }\r\n}\r\n","<section class=\"jumbotron text-center\">\r\n  <div class=\"container\">\r\n    <h1 class=\"jumbotron-heading\">Edit Password</h1>\r\n  </div>\r\n</section>\r\n<div class=\"container\">\r\n  <form (ngSubmit)=\"editUser()\">\r\n    <div class=\"mb-3\">\r\n      <label for=\"oldPassWord\" class=\"form-label\">Old Password</label>\r\n      <input type=\"password\" class=\"form-control\" id=\"oldPassWord\" [(ngModel)]=\"appUser.oldPassWord\"\r\n             name=\"passWord\">\r\n    </div>\r\n    <div><span *ngIf=\"isPasswordCorrect\">{{message}}</span></div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"password\" class=\"form-label\">New Password</label>\r\n      <input type=\"password\" class=\"form-control\" id=\"password\" [(ngModel)]=\"appUser.newPassWord\"\r\n             name=\"passWord\">\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"email\" class=\"form-label\">Email</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"email\" [(ngModel)]=\"appUser.email\"\r\n             name=\"email\">\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <img src=\"{{appUser.avatar}}\" style=\"width: 300px\"><br>\r\n      <label for=\"avatar\" class=\"form-label\">Avatar</label><br>\r\n      <input type=\"file\" id=\"avatar\" name=\"avatar\" (change)=\"onFileSelected($event)\">\r\n    </div>\r\n    <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n      <p>\r\n      <button class=\"btn btn-outline-info\" type=\"button\" [routerLink]=\"'/home'\">Back to home</button>\r\n      <button class=\"btn btn-outline-info\" type=\"submit\" value=\"submit\">Edit</button>\r\n      </p>\r\n    </div>\r\n  </form>\r\n</div>\r\n","<span *ngFor=\"let user of users\" style=\"color: red\">\r\n  {{user.userName}}\r\n</span>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {UserService} from '../../service/user/user.service';\r\nimport {IUser} from '../../interface/i-user';\r\n\r\n@Component({\r\n  selector: 'app-show-tag-user-card',\r\n  templateUrl: './show-tag-user-card.component.html',\r\n  styleUrls: ['./show-tag-user-card.component.scss']\r\n})\r\nexport class ShowTagUserCardComponent implements OnInit {\r\n  @Input()\r\n  card_id: any = 0;\r\n  users: IUser[] =[];\r\n  constructor( private userService:UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsers(this.card_id);\r\n  }\r\n  getUsers(id: number){\r\n    this.userService.getAppUserByCard(id).subscribe( reuslt =>{\r\n      this.users = reuslt;\r\n      console.log(this.users)\r\n    })\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IBoard} from '../../interface/i-board';\r\nimport {BoardService} from '../../service/boardService/board.service';\r\nimport {Router} from '@angular/router';\r\nimport {AuthenService} from \"../../service/authenServie/authen.service\";\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  board: IBoard = {\r\n    id: 0,\r\n    name: '',\r\n    appUser: {\r\n      id: 1,\r\n      userName: '',\r\n      email: '',\r\n      password: '',\r\n    }\r\n  };\r\n\r\n  constructor(private boardService: BoardService,\r\n              private router: Router, private authenService: AuthenService) {\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  create() {\r\n    // @ts-ignore\r\n    this.board.appUser?.id = this.authenService.currentUserValue.id;\r\n    this.boardService.createBoard(this.board).subscribe(() => {\r\n      this.router.navigate(['/home']);\r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<section class=\"jumbotron text-center\">\r\n  <div class=\"p-3 mb-2 bg-info text-dark\">\r\n    <h1 class=\"jumbotron-heading\">TẠO MỚI BOARD</h1>\r\n  </div>\r\n</section>\r\n<form >\r\n  <div class=\"mb-3\">\r\n    <input style=\"min-width:1px;\" type=\"name\" class=\"form-control\"  name=\"name\" [(ngModel)]=\"board.name\" placeholder=\"Enter name\" >\r\n  </div>\r\n  <input  class=\"btn btn-info\" type=\"submit\" (click)=\"create()\" value=\"create\">\r\n</form>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api_url: 'https://trello-alcohol.herokuapp.com/',\r\n  firebaseConfig : {\r\n    apiKey: 'AIzaSyDb8Fn1YnMY6F24h7zmUinPbiGQGv5Texc',\r\n    authDomain: 'trello-project-firebase.firebaseapp.com',\r\n    databaseURL: 'https://trello-project-firebase-default-rtdb.firebaseio.com',\r\n    projectId: 'trello-project-firebase',\r\n    storageBucket: 'trello-project-firebase.appspot.com',\r\n    messagingSenderId: '910489130302',\r\n    appId: '1:910489130302:web:2c7619c853656c2291886f',\r\n    measurementId: 'G-LEKLLZQ4KR'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor, HttpResponse, HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {Router} from '@angular/router';\r\nimport {AuthenService} from '../service/authenServie/authen.service';\r\nimport {tap} from 'rxjs/operators';\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private router: Router,\r\n              private authenService: AuthenService) {\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(tap((event: HttpEvent<any>) => {\r\n      if (event instanceof HttpResponse) {\r\n        // do stuff with response if you want\r\n      }\r\n    }, (err: any) => {\r\n      if (err instanceof HttpErrorResponse) {\r\n        if (err.status === 401) {\r\n          this.authenService.logout();\r\n          this.router.navigate(['/login']);\r\n        } else if (err.status === 403) {\r\n          this.router.navigate(['/']);\r\n        }\r\n      }\r\n    }));\r\n  }\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {IList} from '../../interface/i-list';\r\nimport {ListService} from '../../service/listService/list.service';\r\nimport {ActivatedRoute, ParamMap} from '@angular/router';\r\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\r\nimport {IBoard} from '../../interface/i-board';\r\nimport {AuthenService} from '../../service/authenServie/authen.service';\r\nimport {BoardService} from '../../service/boardService/board.service';\r\n\r\n@Component({\r\n  selector: 'app-show-list',\r\n  templateUrl: './show-list.component.html',\r\n  styleUrls: ['./show-list.component.scss']\r\n})\r\nexport class ShowListComponent implements OnInit {\r\n// @ts-ignore\r\n  sub: Subscription;\r\n  _lists: IList[] = [];\r\n  board_id: number =1;\r\n  list_id: number =1;\r\n  // @ts-ignore\r\n  board: IBoard ={};\r\n  // @ts-ignore\r\n  @Input() placeholder: string;\r\n  // @ts-ignore\r\n  @Input() listIndex: number;\r\n  input: string = \"\";\r\n\r\n\r\n  constructor(private listService: ListService,  private activatedRoute: ActivatedRoute,\r\n              public authenService: AuthenService ) {\r\n    this.activatedRoute.paramMap.subscribe((paramMap: ParamMap) => {\r\n      // @ts-ignore\r\n      this.board_id = +paramMap.get(\"boardId\");\r\n      this.findListByBoardId(this.board_id);\r\n      this.findBoardById(this.board_id);\r\n    })\r\n  }\r\n  update(){\r\n    this.findListByBoardId(this.board_id);\r\n    this.findBoardById(this.board_id);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  findListByBoardId(id: number){\r\n    return this.listService.getListByBoardId(id).subscribe(result =>{\r\n      this._lists = result;\r\n    })\r\n  }\r\n  drop(event: CdkDragDrop<IList[]>) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n      this.changeListPosition(event.container.data);\r\n  }\r\n  changeListPosition(lists: IList[]){\r\n    for (let i = 0; i < lists.length; i++) {\r\n      lists[i].position = i\r\n    }\r\n    this.listService.editPositionList(lists).subscribe(() => {})\r\n  }\r\n  // mung write\r\n  findBoardById(id: number){\r\n    return this.listService.getBoardById(id).subscribe(result => {\r\n      // @ts-ignore\r\n      this.board = result;\r\n    })\r\n  }\r\n}\r\n","<div class=\"root\">\r\n  <div class=\"board\">\r\n    <div class=\"board-bar\">\r\n  <nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\" style=\"height: 70px\">\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" [routerLink]=\"'/home'\">Home <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <span class=\"nav-link\">Board: {{board.name}} <span class=\"sr-only\">(current)</span></span>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <span class=\"nav-link\">Welcome {{authenService.currentUserValue.username}} <span class=\"sr-only\">(current)</span></span>\r\n        </li>\r\n        <li ngbDropdown class=\"nav-item dropdown\">\r\n          <a ngbDropdownToggle class=\"nav-link dropdown-toggle\" id=\"dropdown01\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Filter Card</a>\r\n          <div ngbDropdownMenu class=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\r\n            <a class=\"dropdown-item\" ><app-filter-card-label [board_id]=\"board_id\"></app-filter-card-label></a>\r\n            <a class=\"dropdown-item\" ><app-filter-card-user [board_id]=\"board_id\"></app-filter-card-user></a>\r\n<!--            <a class=\"dropdown-item\" href=\"#\">Something else here</a>-->\r\n          </div>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <app-log-out></app-log-out>\r\n        </li>\r\n      </ul>\r\n      <form class=\"form-inline my-2 my-lg-0\">\r\n        <app-search-card></app-search-card>\r\n      </form>\r\n    </div>\r\n  </nav>\r\n  <main role=\"main\" class=\"container\">\r\n    <div class=\"board\">\r\n      <div class=\"board-wrapper\" >\r\n        <div class=\"board-columns\"\r\n             cdkDropList [cdkDropListData]=\"_lists\"\r\n             (cdkDropListDropped)=\"drop($event)\">\r\n          <div class=\"board-columns\" cdkDropListGroup>\r\n            <div class=\"board-column\"  *ngFor=\"let item of _lists\" cdkDrag >\r\n              <div class=\"column-title\">\r\n                {{ item.title }}\r\n                <app-edit-title-list [list_id]=\"item.id\" (isUpdate)=\"update()\"></app-edit-title-list>\r\n              </div>\r\n              <app-show-card-by-list-id [list_id]=\"item.id\" (isChanged)=\"update()\"></app-show-card-by-list-id>\r\n            </div>\r\n            <div class=\"board-column\"  >\r\n              <app-create-list [board_id]=\"board_id\" (isCreate)=\"update()\"></app-create-list></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</div>\r\n</div>\r\n</div>\r\n","import {environment} from '../../../environments/environment';\r\nimport {EventEmitter, Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {IUserToken} from '../../interface/i-user-token';\r\nimport {map} from 'rxjs/operators';\r\n\r\nimport {IUser} from '../../interface/i-user';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\n\r\nconst API_URL = environment.api_url;\r\n// @ts-ignore\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenService {\r\n  update = new EventEmitter<string>();\r\n  // @ts-ignore\r\n  private currentUserSubject: BehaviorSubject<IUserToken>;\r\n  // @ts-ignore\r\n  public currentUser: Observable<IUserToken>;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    // @ts-ignore\r\n    this.currentUserSubject = new BehaviorSubject<IUserToken>(JSON.parse(localStorage.getItem('user')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): IUserToken {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(username: string, password: string) {\r\n    let user: IUser = {\r\n      userName: username,\r\n      passWord: password\r\n    }\r\n    return this.httpClient.post(API_URL + 'login', user)\r\n      .pipe(map(user => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        this.currentUserSubject.next(user);\r\n        this.update.emit('login');\r\n        return user;\r\n      }));\r\n  }\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    // @ts-ignore\r\n    this.currentUserSubject.next(null);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AuthenService} from '../service/authenServie/authen.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authenService: AuthenService) {\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const currentUser = this.authenService.currentUserValue;\r\n    if (currentUser && currentUser.accessToken) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.accessToken}`\r\n        }\r\n      });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {ListService} from \"../../service/listService/list.service\";\r\nimport {IList} from \"../../interface/i-list\";\r\nimport {Router} from \"@angular/router\";\r\nimport {BsModalRef, BsModalService} from \"ngx-bootstrap/modal\";\r\n@Component({\r\n  selector: 'app-edit-title-list',\r\n  templateUrl: './edit-title-list.component.html',\r\n  styleUrls: ['./edit-title-list.component.scss']\r\n})\r\nexport class EditTitleListComponent implements OnInit {\r\n  // @ts-ignore\r\n  @Input()\r\n  list_id: any = 0;\r\n  list: IList = {\r\n    title : \"\",\r\n    board: {\r\n      id: 0,\r\n      appUser: {}\r\n    }\r\n  }\r\n  // @ts-ignore\r\n  modalRef: BsModalRef;\r\n  constructor(private modalService: BsModalService,private listService: ListService,private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.listService.findListById(this.list_id).subscribe( result => {\r\n      this.list = result;\r\n    })\r\n  }\r\n  @Output()\r\n  isUpdate = new EventEmitter();\r\n  editTitleList(){\r\n    this.listService.editTitleList(this.list, this.list_id).subscribe(() =>{\r\n      this.isUpdate.emit(true);\r\n    });\r\n  }\r\n  openModalWithClass(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(\r\n      template,\r\n      Object.assign({}, { class: 'center modal-lg' })\r\n    );\r\n  }\r\n}\r\n","<button type=\"button\" (click)=\"openModalWithClass(template)\" style=\"border: none; background: honeydew\">\r\n  <i class=\"bi bi-pencil-fill\"> </i></button>\r\n<br>\r\n<ng-template #template>\r\n  <div class=\"modal-content\">\r\n    <div class=\"modal-header\">\r\n      <p class=\"modal-title pull-left\">Create new card</p>\r\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <form (ngSubmit)=\"editTitleList() \">\r\n        <div class=\"form-group\">\r\n          <label for=\"title\">Title</label>\r\n          <input  class=\"form-control\" id=\"title\" aria-describedby=\"emailHelp\" placeholder=\"Enter title\"\r\n                  [(ngModel)]=\"list.title\" name=\"title\">\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"modalRef.hide()\" >Edit</button>\r\n      </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">close</button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {ILabel} from '../../interface/label';\r\nimport {LabelService} from '../../service/labelService/label.service';\r\nimport {ICardLabel} from '../../interface/icard-label';\r\n\r\n@Component({\r\n  selector: 'app-create-label',\r\n  templateUrl: './create-label.component.html',\r\n  styleUrls: ['./create-label.component.scss']\r\n})\r\nexport class CreateLabelComponent implements OnInit {\r\n  @Input()\r\n  card_id: number =0;\r\n  label_id: any =\"selected\";\r\n  labels: ILabel[] =[];\r\n  card_label : ICardLabel ={\r\n    card:{},\r\n    labels:{}\r\n  };\r\n\r\n  constructor(private labelService: LabelService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getLabelSelected(this.card_id);\r\n  }\r\n  getLabelSelected(id: number){\r\n    this.labelService.getListSelected(id).subscribe(labels =>{\r\n      this.labels = labels;\r\n    })\r\n  }\r\n  @Output()\r\n  isAddLabel = new EventEmitter();\r\n  createLabel(){\r\n    // @ts-ignore\r\n    this.card_label.card?.id = this.card_id;\r\n    // @ts-ignore\r\n    this.card_label.labels?.id= +this.label_id;\r\n    console.log(this.card_label)\r\n    this.labelService.addLabelToCard(this.card_label).subscribe(() =>{\r\n      this.isAddLabel.emit(true);\r\n      this.getLabelSelected(this.card_id);\r\n      this.label_id =\"selected\";\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","<select class=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\r\n        (change)=\"createLabel()\" [(ngModel)]=\"label_id\" name=\"label_id\">\r\n  <option selected value=\"selected\">select label</option>\r\n  <option *ngFor=\"let l of labels\" [value]=\"l.id\" [style.backgroundColor]=\"l.color\"\r\n          >{{l.title}}</option>\r\n</select>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormLoginRoutingModule } from './form-login-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { LogOutComponent } from './log-out/log-out.component';\r\nimport { EditPasswordComponent } from './edit-password/edit-password.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    LogOutComponent,\r\n    EditPasswordComponent\r\n  ],\r\n  exports: [\r\n    LoginComponent,\r\n    LogOutComponent,\r\n    EditPasswordComponent\r\n  ],\r\n    imports: [\r\n        CommonModule,\r\n        FormLoginRoutingModule,\r\n        FormsModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        ReactiveFormsModule\r\n    ]\r\n})\r\nexport class FormLoginModule { }\r\n","import { Component } from '@angular/core';\r\nimport {NavigationStart, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'trelloProjectFrontend';\r\n  showHead: boolean = false;\r\n\r\n  constructor(private router: Router) {\r\n    // on route change to '/login', set the variable showHead to false\r\n    router.events.forEach((event) => {\r\n      if (event instanceof NavigationStart) {\r\n        if (event.url == '/login' || event.url == '/register'|| event.url == \"/\") {\r\n          this.showHead = false;\r\n        } else {\r\n          // console.log(\"NU\")\r\n          this.showHead = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<app-header *ngIf=\"showHead\"></app-header>\r\n<router-outlet></router-outlet>\r\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {UserService} from '../../service/user/user.service';\r\nimport {IUser} from '../../interface/i-user';\r\nimport {ICardUser} from '../../interface/icard-User';\r\nimport {NoticficationService} from '../../service/notificationService/noticfication.service';\r\nimport {AuthenService} from '../../service/authenServie/authen.service';\r\nimport {INotification} from '../../interface/i-notification';\r\nimport {CardService} from '../../service/cardService/card.service';\r\nimport {ICard} from '../../interface/i-card';\r\n\r\n@Component({\r\n  selector: 'app-add-member-for-card',\r\n  templateUrl: './add-member-for-card.component.html',\r\n  styleUrls: ['./add-member-for-card.component.scss']\r\n})\r\nexport class AddMemberForCardComponent implements OnInit {\r\n  @Input()\r\n  card_id: number =0;\r\n  appUser_id: any =\"selected\";\r\n  users: IUser[] =[];\r\n  card_user : ICardUser ={\r\n    card:{},\r\n    appUser:{}\r\n  };\r\n  card: ICard ={};\r\n\r\n  constructor(private userService : UserService, private noticficationService: NoticficationService,\r\n              private authenService: AuthenService, private cardService: CardService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAppUserSelected(this.card_id);\r\n    this.getCardById(this.card_id);\r\n  }\r\n  getAppUserSelected(id: number){\r\n    this.userService.getListSelected(id).subscribe(users =>{\r\n      this.users = users;\r\n    })\r\n  }\r\n  getCardById(id: number) {\r\n    this.cardService.findCardById(id).subscribe(card => {\r\n      this.card = card;\r\n    })\r\n  }\r\n  @Output()\r\n  isAddUser = new EventEmitter();\r\n  createAppUser(){\r\n    // @ts-ignore\r\n    this.card_user.card?.id = this.card_id;\r\n    // @ts-ignore\r\n    this.card_user.appUser?.id= +this.appUser_id;\r\n    this.createNotification();\r\n    console.log(this.card_user)\r\n    this.userService.addAppUserToCard(this.card_user).subscribe(() =>{\r\n      this.isAddUser.emit(true);\r\n      this.getAppUserSelected(this.card_id);\r\n      this.appUser_id =\"selected\";\r\n    })\r\n  }\r\n  createNotification(){\r\n    if (this.appUser_id != this.authenService.currentUserValue.id){\r\n      // @ts-ignore\r\n      let notification: INotification = {\r\n        content: this.authenService.currentUserValue.username + \" tag you to be member of \" + this.card.title ,\r\n        appUser: [{\r\n          id: this.appUser_id\r\n        }]\r\n      }\r\n      console.log(notification)\r\n      this.noticficationService.createNotification(notification);\r\n    }\r\n\r\n    }\r\n}\r\n","<select class=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\r\n        (change)=\"createAppUser()\" [(ngModel)]=\"appUser_id\" name=\"appUser_id\">\r\n  <option selected value=\"selected\">select appUser</option>\r\n  <option *ngFor=\"let l of users\" [value]=\"l.id\">{{l.userName}}</option>\r\n</select>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ListRoutingModule } from './list-routing.module';\r\nimport { ShowListComponent } from './show-list/show-list.component';\r\nimport {CardModule} from '../card/card.module';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport { CreateListComponent } from './create-list/create-list.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport { EditTitleListComponent } from './edit-title-list/edit-title-list.component';\r\nimport { DetailListComponent } from './detail-list/detail-list.component';\r\nimport {FormLoginModule} from '../form-login/form-login.module';\r\nimport {FilterCardLabelComponent} from './filter-card-label/filter-card-label.component';\r\n// @ts-ignore\r\nimport {NgbDropdownModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { FilterCardUserComponent } from './filter-card-user/filter-card-user.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShowListComponent,\r\n    CreateListComponent,\r\n    EditTitleListComponent,\r\n    DetailListComponent,\r\n    FilterCardLabelComponent,\r\n    FilterCardUserComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ListRoutingModule,\r\n    CardModule,\r\n    DragDropModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    FormLoginModule,\r\n    NgbDropdownModule,\r\n  ]})\r\nexport class ListModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {LoginServiceService} from '../../service/loginService/login-service.service';\r\nimport {AuthenService} from '../../service/authenServie/authen.service';\r\nimport {environment} from '../../../environments/environment';\r\nimport {Router} from '@angular/router';\r\nimport {ILogin} from '../../interface/ilogin';\r\nimport {Local} from 'protractor/built/driverProviders';\r\nimport {first} from 'rxjs/operators';\r\nimport {IUserToken} from '../../interface/i-user-token';\r\n\r\nconst API_BACKEND = environment.api_url;\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  login: ILogin = {\r\n    id: 0,\r\n    avatar: '',\r\n    email: '',\r\n    userName: '',\r\n    passWord: '',\r\n    role: [],\r\n  };\r\n  // @ts-ignore\r\n  currentUser: IUserToken;\r\n  hide = true;\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = 'Invalid Username or password';\r\n\r\n  constructor(private authenService: AuthenService,\r\n              private router: Router) {\r\n    this.authenService.currentUser.subscribe(value => this.currentUser = value);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  loginUser() {\r\n    this.authenService.login(this.login.userName, this.login.passWord).pipe(first()).subscribe(\r\n      () => {\r\n        this.authenService.currentUserValue.accessToken;\r\n        this.router.navigate(['/home']);\r\n      },\r\n      error => {\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","\r\n<!------ Include the above in your HEAD tag ---------->\r\n\r\n<body>\r\n<div id=\"login\">\r\n  <div class=\"container\">\r\n    <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\r\n      <div id=\"login-column\" class=\"col-md-6\">\r\n        <div id=\"login-box\" class=\"col-md-12\">\r\n          <form (ngSubmit)=\"loginUser()\">\r\n            <h1 class=\"text-center text-info\">Login Form</h1>\r\n            <div class=\"form-group\">\r\n              <label for=\"username\" class=\"text-info\">Username:</label><br>\r\n              <input type=\"text\" placeholder=\"Enter your user name\" [(ngModel)]=\"login.userName\" required minlength=\"6\" name=\"userName\" id=\"username\" class=\"form-control\" style=\"width: 450px\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"password\" class=\"text-info\">Passwords:</label><br>\r\n              <input type=\"password\" placeholder=\"Enter your password\" [(ngModel)]=\"login.passWord\" name=\"userName\" id=\"password\" class=\"form-control\" style=\"width: 450px\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <div style=\"color: red;\" *ngIf=\"isLoginFailed\">\r\n                Login failed: {{ errorMessage }}\r\n              </div>\r\n            </div>\r\n            <div class=\"d-grid gap-2 d-md-flex justify-content-md-start\" style=\"float: right; width: 120px\">\r\n              <button class=\"btn btn-outline-info\" type=\"submit\" >Login</button>\r\n            </div>\r\n            <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\" >\r\n              <button class=\"btn btn-outline-info\" type=\"button\" value=\"submit\" [routerLink]=\"'/register'\">Register</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</body>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {JwtInterceptor} from './helper/jwt.interceptor';\r\nimport {ErrorInterceptor} from './helper/error.interceptor';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {CardModule} from './card/card.module';\r\nimport {ListModule} from './list/list.module';\r\n// @ts-ignore\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {ModalModule} from 'ngx-bootstrap/modal';\r\nimport {AngularFireStorageModule} from '@angular/fire/storage';\r\nimport {AngularFireModule} from '@angular/fire';\r\nimport {environment} from '../environments/environment';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {LabelsModule} from './labels/labels.module';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport {FormLoginModule} from './form-login/form-login.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HeaderComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        DragDropModule,\r\n        CardModule,\r\n        BrowserAnimationsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        ModalModule.forRoot(),\r\n        ListModule,\r\n        FormLoginModule,\r\n        AngularFireStorageModule,\r\n        AngularFireModule.initializeApp(environment.firebaseConfig, 'cloud'),\r\n        BrowserAnimationsModule,\r\n        LabelsModule,\r\n    ],\r\n    providers: [\r\n        {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\r\n        {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}\r\n    ],\r\n  exports: [\r\n    HeaderComponent\r\n  ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<select  [(ngModel)]=\"tagUserBoard.appUser.id\" (change)=\"tagUser()\">\r\n    <option *ngFor=\"let u of listUser\" name=\"user\" [value]=\"u.id\" >{{u.userName}}</option>\r\n  </select>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {IBoard} from \"../../interface/i-board\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {BoardService} from \"../../service/boardService/board.service\";\r\nimport {ActivatedRoute, ParamMap, Router} from \"@angular/router\";\r\nimport {ITagUserBoard, Tag_user_board} from \"../../interface/ITagUserBoard\";\r\nimport {AuthenService} from \"../../service/authenServie/authen.service\";\r\nimport {IUser} from \"../../interface/i-user\";\r\nimport {subscribeOn} from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: 'app-tag-user-board',\r\n  templateUrl: './tag-user-board.component.html',\r\n  styleUrls: ['./tag-user-board.component.scss']\r\n})\r\nexport class TagUserBoardComponent implements OnInit {\r\n  tagUserBoard: ITagUserBoard = {\r\n    id: 0,\r\n    board: {},\r\n    appUser: {}\r\n  };\r\n  @Input()\r\n  board_id: any = 0;\r\n  listUser: IUser[] = [];\r\n\r\n  constructor(private boardService: BoardService,\r\n              private router: Router) {\r\n  }\r\n  // tslint:disable-next-line:typedef\r\n  getListUser(board_id : number) {\r\n    this.boardService.getListUserTag(board_id).subscribe(listUser =>{\r\n      this.listUser = listUser;\r\n      console.log(this.listUser)\r\n    })\r\n  }\r\n  tagUser() {\r\n    this.tagUserBoard.board.id = this.board_id;\r\n    this.boardService.createTagUserBoard(this.tagUserBoard).subscribe(() => {\r\n      for (let i = 0; i < this.listUser.length; i++) {\r\n        if (this.tagUserBoard.appUser.id== this.listUser[i].id){\r\n          this.listUser.splice(i, 1);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  ngOnInit(): void {\r\n    this.getListUser(this.board_id);\r\n  }\r\n\r\n\r\n}\r\n","<button type=\"button\" (click)=\"openModalWithClass(template)\" style=\"border: none; background: honeydew\">\r\n  Filter Card By User\r\n</button>\r\n<br>\r\n<ng-template #template>\r\n  <div class=\"modal-content\" style=\"border: none; background-color: #9C9C9C\">\r\n    <div class=\"modal-header\">\r\n      <h3 class=\"modal-title pull-left\" style=\"color: black;\"><b>Filter card by User</b></h3>\r\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-header\">\r\n      <p class=\"modal-title pull-left\" style=\"color: black\">Select user you want to filter </p>\r\n      <select class=\"form-control\" [(ngModel)]=\"user_id\" (ngModelChange)=\"getCardByUser($event)\">\r\n        <option *ngFor=\"let user of listUser\" [value]=\"user.id\">{{user.userName}}</option>\r\n      </select>\r\n    </div>\r\n    <div style=\"border: none\">\r\n      <table class=\"table table-bordered\" style=\"border: black\" *ngIf=\"user_id\">\r\n        <thead>\r\n        <tr>\r\n          <th scope=\"col\">STT</th>\r\n          <th scope=\"col\">TITLE</th>\r\n          <th scope=\"col\">CONTENT</th>\r\n          <th scope=\"col\">POSITION</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let card of listCard, index as i\">\r\n          <th scope=\"row\">{{i + 1}}</th>\r\n          <td>{{card.title}}</td>\r\n          <td>{{card.content}}</td>\r\n          <td>{{card.position}}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">close</button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import {Component, Input, OnInit, TemplateRef} from '@angular/core';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {UserService} from '../../service/user/user.service';\r\nimport {IUser} from '../../interface/i-user';\r\nimport {CardService} from '../../service/cardService/card.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ICard} from '../../interface/i-card';\r\nimport {NoticficationService} from '../../service/notificationService/noticfication.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-card-user',\r\n  templateUrl: './filter-card-user.component.html',\r\n  styleUrls: ['./filter-card-user.component.scss']\r\n})\r\nexport class FilterCardUserComponent implements OnInit {\r\n  // @ts-ignore\r\n  modalRef: BsModalRef;\r\n  listUser: IUser[] = [];\r\n  listCard: ICard[] = [];\r\n  user_id: number = 0;\r\n  @Input()\r\n  board_id: number = 0;\r\n  constructor(private modalService: BsModalService,private userService: UserService,\r\n              private cardService: CardService, private activatedRoute: ActivatedRoute,\r\n              private noticficationService: NoticficationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllUserTag(this.board_id);\r\n  }\r\n  openModalWithClass(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(\r\n      template,\r\n      Object.assign({}, {class: 'center modal-lg'})\r\n    );\r\n  }\r\n  getAllUserTag(board_id : number){\r\n   this.noticficationService.getUsersByBoard(board_id).subscribe(data =>{\r\n     this.listUser = data;\r\n   })\r\n  }\r\n  getCardByUser(userId:number){\r\n    this.cardService.getCardByUser(this.board_id,userId).subscribe( data =>{\r\n      this.listCard = data;\r\n    })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\n// @ts-ignore\r\nimport { EditPasswordComponent } from './edit-password/edit-password.component';\r\nimport {LogOutComponent} from './log-out/log-out.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'login', pathMatch: 'full'},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'logout', component: LogOutComponent},\r\n  {path: 'edit/:id', component: EditPasswordComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FormLoginRoutingModule { }\r\n","<div class=\"navbar has-background-dark\">\r\n  <div class=\"navbar-brand\">\r\n    <div class=\"navbar-item\">\r\n      <h1 class=\"app-name has-gradient-text\">Trello Project Of Alcohol Team</h1>\r\n    </div>\r\n  </div>\r\n  <div style=\"position: absolute; right: 5%; top: 0\">\r\n    <h5>Welcome {{authenService.currentUserValue.username}}\r\n      <span type=\"button\" (click)=\"openModalWithClass(template)\" style=\"border: none; background: honeydew\">\r\n        <i class=\"bi bi-bell-fill\"></i></span>\r\n      <span>({{notifications.length}})</span></h5>\r\n    <p><app-log-out></app-log-out> <a routerLink=\"/edit/{{authenService.currentUserValue.id}}\">Edit profile</a> </p>\r\n  </div>\r\n</div>\r\n<ng-template #template>\r\n  <div class=\"modal-content\">\r\n    <div class=\"modal-header\">\r\n      <p class=\"modal-title pull-left\">New notification</p>\r\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide(); clearNotification()\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <table>\r\n        <tr *ngFor=\"let n of notifications\">\r\n          <td>{{n.content}}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"modalRef.hide(); clearNotification()\">close</button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n","import {Component, OnInit, TemplateRef} from '@angular/core';\r\nimport {AuthenService} from '../service/authenServie/authen.service';\r\nimport {INotification} from '../interface/i-notification';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {NoticficationService} from '../service/notificationService/noticfication.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  notifications: INotification[] = [];\r\n  // @ts-ignore\r\n  modalRef: BsModalRef;\r\n  constructor(public authenService: AuthenService, private modalService: BsModalService, private noticficationService:NoticficationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getNotification();\r\n    this.connect();\r\n  }\r\n  getNotification(){\r\n    this.noticficationService.getNotifications().subscribe(notifications =>{\r\n      this.notifications = notifications\r\n    })\r\n  }\r\n  openModalWithClass(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(\r\n      template,\r\n      Object.assign({}, { class: 'center modal-lg' })\r\n    );\r\n  }\r\n  clearNotification(){\r\n    this.noticficationService.deleteNotificationByUser().subscribe(\r\n      () =>{\r\n        this.getNotification();\r\n      }\r\n    );\r\n  }\r\n  connect(){\r\n    this.noticficationService._connect(this);\r\n  }\r\n  getConnect(){\r\n    this.getNotification();\r\n  }\r\n\r\n}\r\n","\r\n<section class=\"jumbotron text-center\">\r\n  <div class=\"p-3 mb-2 bg-info text-dark\">\r\n    <img height=\"200px\" src=\"{{avatar}}\" alt=\"avatar\">\r\n    <h1 class=\"jumbotron-heading\">WELCOME {{name}}\r\n    </h1>\r\n  </div>\r\n<!--  <div>-->\r\n<!--    <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\" >-->\r\n<!--      <p><a [routerLink]=\"'/form/edit/'+user_id\">Edit</a></p>-->\r\n<!--      <app-log-out></app-log-out>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n</section>\r\n<table class=\"container\">\r\n<tr>\r\n  <td>\r\n    <button type=\"button\" class=\"btn btn-success\" [routerLink]=\"'/boards/listBoardTagUser'\">DANH SÁCH BOARD ĐƯỢC THÊM\r\n    VÀO\r\n  </button>\r\n  </td>\r\n</tr>\r\n</table>\r\n\r\n<table class=\"container\">\r\n  <table class=\"table table-striped\">\r\n    <tr>\r\n      <td class=\"alert alert-primary\" role=\"alert\">\r\n        DANH SÁCH BOARD ĐÃ TẠO\r\n      </td>\r\n\r\n      <td class=\"alert alert-primary\" role=\"alert\">\r\n        THÊM NGƯỜI DÙNG VÀO BẢNG\r\n      </td>\r\n    </tr>\r\n    <tr *ngFor=\" let b of boards\">\r\n      <td>\r\n        <button type=\"button\" class=\"btn btn-primary\" [routerLink]=\"'/board/'+ b.id\">{{b.name}}</button>\r\n      </td>\r\n      <td>\r\n        <app-tag-user-board [board_id]=\"b.id\"></app-tag-user-board>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <button type=\"button\" class=\"btn btn-info\" [routerLink]=\"'/boards/create'\">ADD NEW</button>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n\r\n    </tr>\r\n  </table>\r\n</table>\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {IBoard} from '../../interface/i-board';\r\nimport {Subscription} from 'rxjs';\r\nimport {BoardService} from '../../service/boardService/board.service';\r\nimport {ActivatedRoute, ParamMap, Router} from \"@angular/router\";\r\nimport {AuthenService} from \"../../service/authenServie/authen.service\";\r\n\r\n@Component({\r\n  selector: 'app-list-board-app-user',\r\n  templateUrl: './list-board-app-user.component.html',\r\n  styleUrls: ['./list-board-app-user.component.scss']\r\n})\r\nexport class ListBoardAppUserComponent implements OnInit {\r\n  boards: IBoard[] = [\r\n  ] ;\r\n  id = 0;\r\n  avatar: string ='';\r\n  name: string ='';\r\n  @Input()\r\n  user_id: number;\r\n\r\n  constructor(private boardService: BoardService,\r\n              private router: Router,\r\n              private authenService: AuthenService){\r\n    this.showAll();\r\n    // @ts-ignore\r\n    this.user_id = authenService.currentUserValue.id;\r\n  }\r\n\r\n\r\n  // tslint:disable-next-line:typedef\r\n  showAll() {\r\n    let id = this.authenService.currentUserValue.id;\r\n    console.log(this.authenService.currentUserValue)\r\n    // @ts-ignore\r\n    this.avatar = this.authenService.currentUserValue.avatar;\r\n    console.log(this.avatar)\r\n    // @ts-ignore\r\n    this.name = this.authenService.currentUserValue.username;\r\n    console.log(this.authenService.currentUserValue.id)\r\n\r\n    // @ts-ignore\r\n    this.boardService.getAllBoardByAppUser(id).subscribe(boards => {\r\n      // @ts-ignore\r\n      this.boards = boards;\r\n    });\r\n  }\r\n  findBoardById(id: number){\r\n    return this.boardService.getBoarById(id).subscribe(result => {\r\n      // @ts-ignore\r\n      this.board = result;\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {CardRoutingModule} from './card-routing.module';\r\nimport {ShowCardByListIdComponent} from './show-card-by-list-id/show-card-by-list-id.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {CreateCardComponent} from './create-card/create-card.component';\r\nimport {ShowListComponent} from '../list/show-list/show-list.component';\r\nimport {ModalModule} from 'ngx-bootstrap/modal';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {SearchCardComponent} from './search-card/search-card.component';\r\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\r\nimport {MatOptionModule} from \"@angular/material/core\";\r\n// @ts-ignore\r\nimport {Ng2OrderModule} from \"ng2-order-pipe\";\r\n// @ts-ignore\r\nimport {Ng2SearchPipeModule} from \"ng2-search-filter\";\r\n// @ts-ignore\r\nimport {NgxPaginationModule} from \"ngx-pagination\";\r\nimport { EditCardComponent } from './edit-card/edit-card.component';\r\nimport { DetailCardComponent } from './detail-card/detail-card.component';\r\nimport {LabelsModule} from '../labels/labels.module';\r\nimport { AddMemberForCardComponent } from './add-member-for-card/add-member-for-card.component';\r\nimport { ShowTagUserCardComponent } from './show-tag-user-card/show-tag-user-card.component';\r\nimport { CommentComponent } from './comment/comment.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShowCardByListIdComponent,\r\n    CreateCardComponent,\r\n    EditCardComponent,\r\n    DetailCardComponent,\r\n    SearchCardComponent,\r\n    AddMemberForCardComponent,\r\n    ShowTagUserCardComponent,\r\n    CommentComponent\r\n  ],\r\n    exports: [\r\n        ShowCardByListIdComponent,\r\n        CreateCardComponent,\r\n        SearchCardComponent\r\n    ],\r\n  imports: [\r\n    CommonModule,\r\n    CardRoutingModule,\r\n    DragDropModule,\r\n    BrowserModule,\r\n    ModalModule,\r\n    FormsModule,\r\n    Ng2OrderModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule,\r\n    MatCheckboxModule,\r\n    MatOptionModule,\r\n    LabelsModule,\r\n  ],\r\n  bootstrap: [ShowListComponent]\r\n\r\n})\r\nexport class CardModule {\r\n}\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LabelsRoutingModule { }\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ILogin} from '../../interface/ilogin';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '../../../environments/environment';\r\nconst API_LOCAL = environment.api_url;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginServiceService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n  loginAppUser(log: ILogin): Observable<ILogin> {\r\n    return this.httpClient.post<ILogin>(API_LOCAL+'login',log);\r\n  }\r\n\r\n  createAppUser(log: ILogin): Observable<ILogin> {\r\n    return this.httpClient.post<ILogin>(API_LOCAL+'list/create', log);\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {ICard} from '../../interface/i-card';\r\nimport {CardService} from '../../service/cardService/card.service';\r\nimport {Router} from '@angular/router';\r\nimport {ListService} from '../../service/listService/list.service';\r\nimport {NoticficationService} from '../../service/notificationService/noticfication.service';\r\nimport {IUser} from '../../interface/i-user';\r\nimport {INotification} from '../../interface/i-notification';\r\nimport {AuthenService} from '../../service/authenServie/authen.service';\r\n\r\n@Component({\r\n  selector: 'app-create-card',\r\n  templateUrl: './create-card.component.html',\r\n  styleUrls: ['./create-card.component.scss']\r\n})\r\nexport class CreateCardComponent implements OnInit {\r\n  @Input()\r\n  list_id: any =0;\r\n  card: ICard = {};\r\n  userList: IUser[] =[];\r\n  // @ts-ignore\r\n  modalRef: BsModalRef;\r\n  constructor(private modalService: BsModalService, private cardService: CardService, private router: Router,\r\n              private listService: ListService, private noticficationService: NoticficationService,\r\n              private authenService: AuthenService) {\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.listService.findListById(this.list_id).subscribe(list => {\r\n      // @ts-ignore\r\n      this.card.list = list;\r\n    })\r\n  }\r\n  @Output()\r\n  isCreated = new EventEmitter();\r\n  createCard() {\r\n    this.cardService.createCard(this.card).subscribe(() => {\r\n      // this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n      // this.router.onSameUrlNavigation = 'reload';\r\n      // // @ts-ignore\r\n      // this.router.navigateByUrl(\"/board/\" + this.card.list?.board?.id) ;\r\n      this.isCreated.emit(true);\r\n    })\r\n    this.createNotification();\r\n\r\n  }\r\n  createNotification(){\r\n    // @ts-ignore\r\n    this.noticficationService.getUsersByBoard(this.card.list.board?.id).subscribe(users => {\r\n      this.userList = this.noticficationService.getListNoticeUser(users);\r\n      let notification: INotification = {\r\n        content: this.authenService.currentUserValue.username + \" create new card: \" + this.card.title,\r\n        appUser: this.userList\r\n      }\r\n      console.log(notification)\r\n      this.noticficationService.createNotification(notification);\r\n\r\n    })\r\n  }\r\n\r\n  openModalWithClass(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(\r\n      template,\r\n      Object.assign({}, { class: 'center modal-lg' })\r\n    );\r\n  }\r\n\r\n}\r\n","<button type=\"button\" (click)=\"openModalWithClass(template)\" style=\"border: none; background: honeydew\">\r\n  <i class=\"bi bi-journal-plus\"></i> Add new</button>\r\n<br>\r\n<ng-template #template>\r\n  <div class=\"modal-content\">\r\n  <div class=\"modal-header\">\r\n    <p class=\"modal-title pull-left\">Create new card</p>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form (ngSubmit)=\"createCard() \">\r\n        <div class=\"form-group\">\r\n          <label for=\"title\">Title</label>\r\n          <input  class=\"form-control\" id=\"title\" aria-describedby=\"emailHelp\" placeholder=\"Enter title\"\r\n                  [(ngModel)]=\"card.title\" name=\"title\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"content\">Content</label>\r\n          <input  class=\"form-control\" id=\"content\" aria-describedby=\"emailHelp\" placeholder=\"Enter content\"\r\n                  [(ngModel)]=\"card.content\" name=\"content\">\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"modalRef.hide()\" >Create</button>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">close</button>\r\n  </div>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-detail-list',\r\n  templateUrl: './detail-list.component.html',\r\n  styleUrls: ['./detail-list.component.scss']\r\n})\r\nexport class DetailListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>detail-list works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {ShowCardByListIdComponent} from './show-card-by-list-id/show-card-by-list-id.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'card',component:ShowCardByListIdComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CardRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {FilterCardLabelComponent} from './filter-card-label/filter-card-label.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"filter/label\",\r\n    component:FilterCardLabelComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ListRoutingModule { }\r\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {ICard} from '../../interface/i-card';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {CardService} from '../../service/cardService/card.service';\r\nimport {Router} from '@angular/router';\r\nimport {ListService} from '../../service/listService/list.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-card',\r\n  templateUrl: './edit-card.component.html',\r\n  styleUrls: ['./edit-card.component.scss']\r\n})\r\nexport class EditCardComponent implements OnInit {\r\n  @Input()\r\n  card_id: any = 0;\r\n  card: ICard ={};\r\n  // @ts-ignore\r\n  modalRef: BsModalRef;\r\n  constructor(private modalService: BsModalService, private cardService: CardService, private router: Router) {\r\n  }\r\n  getCardById(id: number){\r\n    this.cardService.findCardById(id).subscribe(card => {\r\n      this.card = card;\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCardById(this.card_id);\r\n  }\r\n  @Output()\r\n  isUpdate = new EventEmitter();\r\n  editCard(){\r\n    this.cardService.editCard(this.card_id, this.card).subscribe(() =>{\r\n      this.isUpdate.emit(true);\r\n    });\r\n  }\r\n  openModalWithClass(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(\r\n      template,\r\n      Object.assign({}, { class: 'center modal-lg' })\r\n    );\r\n  }\r\n\r\n}\r\n","<button type=\"button\" (click)=\"openModalWithClass(template)\" style=\"border: none; background: honeydew\">\r\n  <i class=\"bi bi-pencil-fill\"> Edit</i></button>\r\n<br>\r\n<ng-template #template>\r\n  <div class=\"modal-content\">\r\n    <div class=\"modal-header\">\r\n      <p class=\"modal-title pull-left\">Create new card</p>\r\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <form (ngSubmit)=\"editCard() \">\r\n        <div class=\"form-group\">\r\n          <label for=\"title\">Title</label>\r\n          <input  class=\"form-control\" id=\"title\" aria-describedby=\"emailHelp\" placeholder=\"Enter title\"\r\n                  [(ngModel)]=\"card.title\" name=\"title\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"content\">Conent</label>\r\n          <input  class=\"form-control\" id=\"content\" aria-describedby=\"emailHelp\" placeholder=\"Enter content\"\r\n                  [(ngModel)]=\"card.content\" name=\"content\">\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"modalRef.hide()\" >Edit</button>\r\n      </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">close</button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../../environments/environment';\r\nimport {Observable} from 'rxjs';\r\nimport {IList} from '../../interface/i-list';\r\nimport {IBoard} from '../../interface/i-board';\r\nconst URL_BACKEND = environment.api_url;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListService {\r\n  // @ts-ignore\r\n  id: number;\r\n  // @ts-ignore\r\n  board: IBoard;\r\n  // @ts-ignore\r\n  lists: IList[];\r\n  constructor(private httpClient: HttpClient) { }\r\n  getListByBoardId(id: number): Observable<IList[]>{\r\n    return this.httpClient.get<IList[]>(URL_BACKEND + \"board/\" + id);\r\n  }\r\n  createList(list: IList): Observable<any>{\r\n    return this.httpClient.post(URL_BACKEND + \"createList\", list);\r\n  }\r\n  editPositionList(lists: IList[]): Observable<any>{\r\n    return this.httpClient.put(URL_BACKEND + \"editPositionList\", lists);\r\n  }\r\n  getBoardById(id: number): Observable<IBoard>{\r\n    return this.httpClient.get<IBoard>(URL_BACKEND+`board/findBoardById/` + id);\r\n\r\n  }\r\n\r\n  findListById(id:number): Observable<IList>{\r\n    return this.httpClient.get<IList>(URL_BACKEND + \"findList/\"+ id);\r\n  }\r\n  editTitleList(list: IList, id: number): Observable<IList>{\r\n    return this.httpClient.put(URL_BACKEND+\"editTitleList/\"+ id, list);\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {ICard} from '../../interface/i-card';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {CardService} from '../../service/cardService/card.service';\r\nimport {Observable} from 'rxjs';\r\nimport {AngularFireStorage} from '@angular/fire/storage';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {IMediaFile} from '../../interface/media-file';\r\nimport {MediaFileService} from '../../service/mediaFile/media-file.service';\r\nimport {ILabel} from '../../interface/label';\r\nimport {LabelService} from '../../service/labelService/label.service';\r\nimport {UserService} from '../../service/user/user.service';\r\nimport {IUser} from '../../interface/i-user';\r\n\r\n@Component({\r\n  selector: 'app-detail-card',\r\n  templateUrl: './detail-card.component.html',\r\n  styleUrls: ['./detail-card.component.scss']\r\n})\r\nexport class DetailCardComponent implements OnInit {\r\n  @Input()\r\n  card_id: any = 0;\r\n  card: ICard = {};\r\n  // @ts-ignore\r\n  modalRef: BsModalRef;\r\n  url: string = \"\";\r\n  // @ts-ignore\r\n  selectedFile: File = null;\r\n  // @ts-ignore\r\n  downloadURL: Observable<string>;\r\n  // @ts-ignore\r\n  mediaFiles: IMediaFile[];\r\n  labels: ILabel[] = [];\r\n  users: IUser[] = [];\r\n\r\n  constructor(private modalService: BsModalService, private cardService: CardService,\r\n              private storage: AngularFireStorage, private mediaFileService: MediaFileService,\r\n              private labelService: LabelService,\r\n              private userService: UserService){\r\n  }\r\n\r\n  getCardById(id: number) {\r\n    this.cardService.findCardById(id).subscribe(card => {\r\n      this.card = card;\r\n    })\r\n  }\r\n  getMediaFiles(id: number){\r\n    this.mediaFileService.getMediaFilesByCardId(id).subscribe(result =>{\r\n      this.mediaFiles = result;\r\n    })\r\n  }\r\n  getLabels(id: number){\r\n    this.labelService.getLabelsByCard(id).subscribe(labels =>{\r\n      this.labels = labels\r\n      // console.log(this.labels);\r\n    })\r\n  }\r\n  getUsers(id: number){\r\n    this.userService.getAppUserByCard(id).subscribe(users =>{\r\n      this.users = users\r\n      // console.log(this.users);\r\n    })\r\n  }\r\n\r\n  @Output()\r\n  isUpdate = new EventEmitter();\r\n  update(){\r\n    this.getCardById(this.card_id);\r\n    this.getMediaFiles(this.card_id);\r\n    this.getLabels(this.card_id);\r\n    this.getUsers(this.card_id);\r\n    this.isUpdate.emit(true);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCardById(this.card_id);\r\n    this.getMediaFiles(this.card_id);\r\n    this.getLabels(this.card_id)\r\n    this.getUsers(this.card_id);\r\n  }\r\n\r\n  openModalWithClass(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(\r\n      template,\r\n      Object.assign({}, {class: 'center modal-lg'})\r\n    );\r\n  }\r\n  onFileSelected(event: any) {\r\n    let n = Date.now();\r\n    const file = event.target.files[0];\r\n    const filePath = `trelloFIle/${n}`;\r\n    const fileRef = this.storage.ref(filePath);\r\n    const task = this.storage.upload(filePath, file);\r\n    task\r\n      .snapshotChanges()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.downloadURL = fileRef.getDownloadURL();\r\n          this.downloadURL.subscribe(url => {\r\n            if (url) {\r\n              this.url = url;\r\n              this.createMediaFile();\r\n            }\r\n          });\r\n        })\r\n      ).subscribe(url => {\r\n      if (url) {\r\n        console.log(\"Upload success\");\r\n      }\r\n    });\r\n  }\r\n  createMediaFile(){\r\n    let mediaFile: IMediaFile = {\r\n      link: this.url,\r\n      card: this.card\r\n    }\r\n    this.mediaFileService.createMediaFile(mediaFile).subscribe(() => {\r\n      this.update()\r\n    });\r\n  }\r\n}\r\n\r\n","<button type=\"button\" (click)=\"openModalWithClass(template)\" style=\"border: none; background: honeydew\">\r\n  <i class=\"bi bi-list-ul\"></i></button>\r\n<br>\r\n<ng-template #template>\r\n  <div class=\"modal-content\">\r\n    <div class=\"modal-header\">\r\n      <p class=\"modal-title pull-left\">Card detail</p>\r\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <div class=\"col-8\" style=\"float: left\">\r\n        <h5>Title</h5>\r\n        <p>{{card.title}}</p>\r\n        <h5>Content</h5>\r\n        <p>{{card.content}}</p>\r\n        <h5>Attach file</h5>\r\n        <div *ngFor=\"let item of mediaFiles\">\r\n          <a href=\"{{item.link}}\">file</a></div>\r\n        <h5>Labels</h5>\r\n        <span *ngFor=\"let l of labels\"> <span [style.backgroundColor]=\"l.color\">{{l.title}}</span> &nbsp; &nbsp;\r\n        </span>\r\n        <h5>Member</h5>\r\n        <span *ngFor=\"let user of users\">{{user.userName}}&nbsp; &nbsp;</span>\r\n      </div>\r\n      <div class=\"col-1\">\r\n        <ul>\r\n          <app-edit-card [card_id]=\"card_id\" (isUpdate)=\"update()\"></app-edit-card>\r\n          <input type=\"file\" (change)=\"onFileSelected($event)\" name=\"file\" id=\"file\" style=\"padding-bottom: 5px\"><br>\r\n          <app-create-label [card_id]=\"card_id\" (isAddLabel)=\"update()\"></app-create-label>\r\n          <app-add-member-for-card [card_id]=\"card_id\" (isAddUser)=\"update()\"></app-add-member-for-card>\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <app-comment [card_id]=\"card_id\"></app-comment>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">close</button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","<div class=\"container\">\r\n  <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\" >\r\n    <p><app-log-out></app-log-out> <a routerLink=\"/form/edit/{{authenService.currentUserValue.id}}\">Edit password</a></p>\r\n  </div>\r\n  <table class=\"table table-striped\">\r\n    <tr>\r\n      <th>STT</th>\r\n      <td>NAME</td>\r\n      <td>TAG USER</td>\r\n    </tr>\r\n    <tr *ngFor=\"let b of boards, index as i\">\r\n      <td>{{i+1}}</td>\r\n      <td >{{b.name}}</td>\r\n  </table>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IBoard} from '../../interface/i-board';\r\nimport {BoardService} from '../../service/boardService/board.service';\r\nimport {AuthenService} from '../../service/authenServie/authen.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  boards: IBoard[] = [];\r\n\r\n  constructor(private boardService: BoardService, public authenService:AuthenService) {\r\n    this.showAll();\r\n  }\r\n\r\n  // @ts-ignore\r\n  showAll(): Board[] {\r\n    this.boardService.showALl().subscribe(boards => {\r\n      this.boards = boards;\r\n      console.log(this.boards);\r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<input class=\"form-control mr-sm-2\" type=\"text\" name=\"input\" [(ngModel)]=\"input\" placeholder=\"Search card by content or title\" (ngModelChange)=\"searchCardByContentOrTitle()\" aria-label=\"Search\">\r\n<button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" (click)=\"openModalWithClass(template)\">Search</button>\r\n<ng-template #template>\r\n  <form (ngSubmit)=\"searchCardByContentOrTitle()\">\r\n    <table class=\"table\">\r\n      <thead class=\"thead-dark\">\r\n      <tr>\r\n        <th scope=\"col\">STT</th>\r\n        <th scope=\"col\">Content</th>\r\n        <th scope=\"col\">Title</th>\r\n        <th scope=\"col\">Board</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody *ngFor=\"let card of list, index as i\">\r\n      <td>{{i + 1}}</td>\r\n      <td>{{card.content}}</td>\r\n      <td>{{card.title}}</td>\r\n      </tbody>\r\n    </table>\r\n  </form>\r\n</ng-template>\r\n","import {Component, OnInit, TemplateRef} from '@angular/core';\r\nimport {CardService} from \"../../service/cardService/card.service\";\r\nimport {ICard} from \"../../interface/i-card\";\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-search-card',\r\n  templateUrl: './search-card.component.html',\r\n  styleUrls: ['./search-card.component.scss']\r\n})\r\nexport class SearchCardComponent implements OnInit {\r\n  input: string = \"\";\r\n  input1: string = \"\";\r\n  list: ICard[] = [];\r\n  // @ts-ignore\r\n  modalRef: BsModalRef;\r\n  constructor(private modalService: BsModalService,private cardService:CardService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardService.showAllCard().subscribe(result =>{\r\n      this.list = result;\r\n      console.log(this.list);\r\n    })\r\n  }\r\n  searchCardByContentOrTitle(){\r\n    if(this.input == \"\"){\r\n      this.ngOnInit();\r\n    } else {\r\n      this.list = this.list.filter(res => {\r\n        return res.title?.toLocaleLowerCase().match(this.input.toLocaleLowerCase())\r\n          || res.content?.toLocaleLowerCase().match(this.input.toLocaleLowerCase());\r\n      })\r\n    }\r\n  }\r\n  openModalWithClass(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(\r\n      template,\r\n      Object.assign({}, {class: 'center modal-lg'})\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BoardRoutingModule } from './board-routing.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListBoardAppUserComponent } from './list-board-app-user/list-board-app-user.component';\r\nimport { TagUserBoardComponent } from './tag-user-board/tag-user-board.component';\r\nimport { ListBoardTagUserComponent } from './list-board-tag-user/list-board-tag-user.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {FormLoginModule} from '../form-login/form-login.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateComponent,\r\n    ListBoardAppUserComponent,\r\n    TagUserBoardComponent,\r\n    ListBoardTagUserComponent,\r\n    HomeComponent\r\n  ],\r\n    imports: [\r\n        CommonModule,\r\n        BoardRoutingModule,\r\n        FormsModule,\r\n        FormLoginModule\r\n    ]\r\n})\r\nexport class BoardModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {LoginServiceService} from '../../service/loginService/login-service.service';\r\nimport {Router} from '@angular/router';\r\nimport {ILogin} from '../../interface/ilogin';\r\nimport {Observable} from 'rxjs';\r\nimport {AngularFireStorage} from '@angular/fire/storage';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  // @ts-ignore\r\n  selectedFile: File = null;\r\n  // @ts-ignore\r\n  downloadURL: Observable<string>;\r\n\r\n  login: ILogin = {\r\n    id: 0,\r\n    avatar: '',\r\n    email: '',\r\n    userName: '',\r\n    passWord: '',\r\n    role: [],\r\n  };\r\n  constructor(private loginService: LoginServiceService, private router: Router, private storage: AngularFireStorage, private fb: FormBuilder) {\r\n  }\r\n  registerForm = this.fb.group({\r\n    \"userName\": ['',[Validators.required, Validators.minLength(3), Validators.pattern('^[a-zA-Z0-9ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêếìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂẾưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹý ]+$')]],\r\n    \"passWord\": ['', [Validators.minLength(6), Validators.maxLength(30)]],\r\n    \"email\": ['', Validators.email]\r\n  })\r\n  onFileSelected(event: any) {\r\n    let n = Date.now();\r\n    const file = event.target.files[0];\r\n    const filePath = `trelloFIle/${n}`;\r\n    const fileRef = this.storage.ref(filePath);\r\n    const task = this.storage.upload(filePath, file);\r\n    task\r\n      .snapshotChanges()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.downloadURL = fileRef.getDownloadURL();\r\n          this.downloadURL.subscribe(url => {\r\n            if (url) {\r\n              this.login.avatar = url;\r\n            }\r\n          });\r\n        })\r\n      ).subscribe(url => {\r\n      if (url) {\r\n        console.log(\"Upload success\");\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  // tslint:disable-next-line:typedef\r\n  registionUser() {\r\n    this.loginService.createAppUser(this.login).subscribe(() => {\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n}\r\n","<section class=\"jumbotron text-center\">\r\n  <div class=\"container\">\r\n    <h1 class=\"jumbotron-heading\">REGISTER FORM</h1>\r\n  </div>\r\n\r\n</section>\r\n\r\n<div class=\"container\">\r\n  <form (ngSubmit)=\"registionUser()\" [formGroup]=\"registerForm\">\r\n    <div class=\"mb-3\">\r\n      <mat-icon color=\"warn\">account_box</mat-icon>\r\n      <label for=\"userName\" class=\"form-label\">User Name</label>\r\n\r\n      <input type=\"text\" class=\"form-control\" id=\"userName\" placeholder=\"Enter your user name\" [(ngModel)]=\"login.userName\"\r\n             formControlName=\"userName\" required>\r\n      <small *ngIf=\"registerForm.get('userName')?.invalid \" class=\"text-danger\" >\r\n        Enter User name of at least 3 characters and do not use special characters !\r\n      </small>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"password\" class=\"form-label\">Password</label>\r\n      <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter your password\" [(ngModel)]=\"login.passWord\" formControlName=\"passWord\" required>\r\n      <small *ngIf=\"registerForm.get('userName')?.invalid \" class=\"text-danger\" >\r\n        Enter Password of at least 6 characters and do not use special characters !\r\n      </small>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <mat-icon color=\"warn\"> email</mat-icon>\r\n      <label for=\"email\" class=\"form-label\">Email</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email\" [(ngModel)]=\"login.email\" formControlName=\"email\" required>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <mat-icon color=\"warn\"> satellite</mat-icon>\r\n      <label for=\"avata\" class=\"form-label\">Avata</label>\r\n      <br>\r\n      <input type=\"file\"\r\n             id=\"avata\"\r\n             #userPhoto\r\n             (change)=\"onFileSelected($event)\"\r\n             name=\"image\"\r\n             autocomplete=\"off\">\r\n    </div>\r\n    <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\" style=\"float: right; width: 120px\">\r\n      <button class=\"btn btn-primary\" type=\"button\" [routerLink]=\"'/login'\">Back to login</button>\r\n    </div>\r\n    <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\" >\r\n      <button class=\"btn btn-primary\" type=\"submit\" value=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\r\n    </div>\r\n\r\n  </form>\r\n</div>\r\n\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../../environments/environment';\r\nimport {ILogin} from '../../interface/ilogin';\r\nimport {Observable} from 'rxjs';\r\nimport {IUser} from '../../interface/i-user';\r\nimport {ICardUser} from '../../interface/icard-User';\r\nconst API_USER = environment.api_url;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  log: ILogin = {\r\n    id: 0,\r\n    avatar: '',\r\n    email: '',\r\n    userName: '',\r\n    passWord: '',\r\n    role: [],\r\n  };\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n  editAppUser(log: ILogin, id: number): Observable<any> {\r\n    return this.httpClient.put<ILogin>(API_USER + 'list/edit/' + id,log);\r\n  }\r\n  findUserById(id: number): Observable<ILogin> {\r\n    return this.httpClient.get<ILogin>(API_USER +'list/'+ id);\r\n  }\r\n  getListSelected(card_id:number): Observable<IUser[]>{\r\n    return this.httpClient.get<IUser[]>(API_USER+\"card/tagUser/selected/\" + card_id);\r\n  }\r\n  getAppUserByCard(card_id:number): Observable<IUser[]>{\r\n    return this.httpClient.get<IUser[]>(API_USER + \"card/tagUser/\"+ card_id);\r\n  }\r\n  addAppUserToCard(iCardUser: ICardUser):Observable<any>{\r\n    return this.httpClient.post(API_USER +\"card/tagUser/addAppUserToCard\",iCardUser);\r\n  }\r\n  getAllUser():Observable<any>{\r\n    return this.httpClient.get(API_USER+'list')\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {ListService} from \"../../service/listService/list.service\";\r\nimport {IList} from \"../../interface/i-list\";\r\nimport {CardService} from \"../../service/cardService/card.service\";\r\nimport {BoardService} from \"../../service/boardService/board.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {BsModalRef, BsModalService} from \"ngx-bootstrap/modal\";\r\n\r\n@Component({\r\n  selector: 'app-create-list',\r\n  templateUrl: './create-list.component.html',\r\n  styleUrls: ['./create-list.component.scss']\r\n})\r\nexport class CreateListComponent implements OnInit {\r\n  @Input()\r\n  board_id: any = 0;\r\n  // @ts-ignore\r\n  list: IList ={\r\n    board: {\r\n      id: 0\r\n    }\r\n  };\r\n  // @ts-ignore\r\n  modalRef: BsModalRef;\r\n  constructor(private listService: ListService, private boardService: BoardService, private router: Router,private modalService: BsModalService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  @Output()\r\n  isCreate = new EventEmitter();\r\n  createList(){\r\n    // @ts-ignore\r\n    this.list.board?.id = this.board_id;\r\n    console.log(this.list)\r\n    this.listService.createList(this.list).subscribe( () =>{\r\n      // this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n      // this.router.onSameUrlNavigation = 'reload';\r\n      // // @ts-ignore\r\n      // this.router.navigateByUrl(\"/board/\" + this.list?.board?.id) ;\r\n      this.isCreate.emit(true);\r\n    })\r\n  }\r\n  openModalWithClass(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(\r\n      template,\r\n      Object.assign({}, { class: 'center modal-lg' })\r\n    );\r\n  }\r\n}\r\n","<button type=\"button\" (click)=\"openModalWithClass(template)\" style=\"border: none; background: honeydew\">\r\n  <i class=\"bi bi-journal-plus\"></i> Add new</button>\r\n<br>\r\n<ng-template #template>\r\n  <div class=\"modal-content\">\r\n    <div class=\"modal-header\">\r\n      <p class=\"modal-title pull-left\">Create new list</p>\r\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <form (ngSubmit)=\"createList()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"title\">Title</label>\r\n          <input  class=\"form-control\" id=\"title\" aria-describedby=\"emailHelp\" placeholder=\"Enter title\"\r\n                  [(ngModel)]=\"list.title\" name=\"title\">\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"modalRef.hide()\" >Create</button>\r\n      </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">close</button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","<button type=\"button\" (click)=\"openModalWithClass(template)\" style=\"border: none; background: honeydew\">Filter Card By Label</button>\r\n<br>\r\n<ng-template #template>\r\n      <div class=\"modal-content\" style=\"border: none; background-color: #9C9C9C\">\r\n        <div class=\"modal-header\">\r\n          <h3 class=\"modal-title pull-left\" style=\"color: black;\"><b>Filter card by label</b></h3>\r\n          <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n      </div>\r\n        <div class=\"modal-header\">\r\n        <p class=\"modal-title pull-left\" style=\"color: black\">Select label you want to filter </p>\r\n      <select class=\"form-control\" [(ngModel)]=\"label_id\" (ngModelChange)=\"getAllCardByLabel($event)\">\r\n        <option *ngFor=\"let label of listLabel\" [value]=\"label.id\">{{label.title}}</option>\r\n      </select>\r\n        </div>\r\n      <div style=\"border: none\">\r\n        <table class=\"table table-bordered\" style=\"border: black\" *ngIf=\"label_id\">\r\n          <thead>\r\n          <tr>\r\n            <th scope=\"col\">STT</th>\r\n            <th scope=\"col\">TITLE</th>\r\n            <th scope=\"col\">CONTENT</th>\r\n            <th scope=\"col\">POSITION</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let card of listCard, index as i\">\r\n            <th scope=\"row\">{{i + 1}}</th>\r\n            <td>{{card.title}}</td>\r\n            <td>{{card.content}}</td>\r\n            <td>{{card.position}}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">close</button>\r\n    </div>\r\n    </div>\r\n</ng-template>\r\n","import {Component, Input, OnInit, TemplateRef} from '@angular/core';\r\nimport {LabelService} from '../../service/labelService/label.service';\r\nimport {CardService} from '../../service/cardService/card.service';\r\nimport {ILabel} from '../../interface/label';\r\nimport {ICard} from '../../interface/i-card';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {IBoard} from '../../interface/i-board';\r\nimport {BoardService} from '../../service/boardService/board.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-card-label',\r\n  templateUrl: './filter-card-label.component.html',\r\n  styleUrls: ['./filter-card-label.component.scss']\r\n})\r\nexport class FilterCardLabelComponent implements OnInit {\r\n  listLabel: ILabel[] = [];\r\n  listCard: ICard[] = [];\r\n  label_id: number = 0;\r\n  // @ts-ignore\r\n  modalRef: BsModalRef;\r\n  @Input()\r\n  board_id: number = 0;\r\n  board: IBoard = {};\r\n  constructor(private modalService: BsModalService,private labelService:LabelService,\r\n              private  cardService:CardService, private activatedRoute: ActivatedRoute,\r\n              private boardService:BoardService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllLabel();\r\n  }\r\n  getAllLabel(){\r\n    this.labelService.getAllLabel().subscribe(data =>{\r\n      this.listLabel = data;\r\n    })\r\n  }\r\n  getAllCardByLabel(label_id:any){\r\n    this.cardService.getCardByLabel(this.board_id,label_id).subscribe( data =>{\r\n      this.listCard = data;\r\n      console.log(this.listCard);\r\n      console.log('a')\r\n    })\r\n  }\r\n  openModalWithClass(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(\r\n      template,\r\n      Object.assign({}, {class: 'center modal-lg'})\r\n    );\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {CreateComponent} from \"./create/create.component\";\r\nimport {ListBoardTagUserComponent} from \"./list-board-tag-user/list-board-tag-user.component\";\r\nimport {ListBoardAppUserComponent} from \"./list-board-app-user/list-board-app-user.component\";\r\nimport {HomeComponent} from \"./home/home.component\";\r\nimport {ShowListComponent} from \"../list/show-list/show-list.component\";\r\nimport {TagUserBoardComponent} from \"./tag-user-board/tag-user-board.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'board/:boardId',\r\n    component: ShowListComponent\r\n  },\r\n  {\r\n    path: 'boards/create',\r\n    component: CreateComponent\r\n  },\r\n  {\r\n    path: 'boards/listBoardTagUser',\r\n    component: ListBoardTagUserComponent\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: ListBoardAppUserComponent\r\n\r\n  },\r\n  {\r\n    path: 'listboard',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'tagUser/tag',\r\n    component: TagUserBoardComponent\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BoardRoutingModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HeaderComponent} from '../../header/header.component';\r\nimport * as Stomp from 'stompjs';\r\nimport * as SockJS from 'sockjs-client';\r\nimport {AuthenService} from '../authenServie/authen.service';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {INotification} from '../../interface/i-notification';\r\nimport {environment} from '../../../environments/environment';\r\nimport {IUser} from '../../interface/i-user';\r\nconst URL_BACKEND = environment.api_url;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NoticficationService {\r\n  webSocketEndPoint: string = URL_BACKEND+ 'ws';\r\n  topic: string = \"/topic/notice\";\r\n  stompClient: any;\r\n  headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.authenService.currentUserValue.accessToken);\r\n\r\n  constructor(private authenService: AuthenService,private httpClient: HttpClient) { }\r\n  _connect(headerComponent: HeaderComponent) {\r\n    console.log(this.headers)\r\n    console.log(\"Initialize WebSocket Connection\");\r\n    let ws = new SockJS(this.webSocketEndPoint);\r\n    this.stompClient = Stomp.over(ws);\r\n    const _this = this;\r\n    _this.stompClient.connect(_this.headers, function (frame: any) {\r\n\r\n      _this.stompClient.subscribe(_this.topic, function (sdkEvent: any) {\r\n        console.log(\"pt được gọi\")\r\n        headerComponent.getConnect();\r\n        // _this.onMessageReceived(sdkEvent);\r\n      });\r\n    });\r\n  };\r\n  createNotification(notification: any) {\r\n    console.log(\"pr send duoc goi\");\r\n    this.stompClient.send(\"/app/notice\",{}, JSON.stringify(notification));\r\n  }\r\n  getNotifications(): Observable<INotification[]>{\r\n    return this.httpClient.get<INotification[]>(URL_BACKEND + \"notification\");\r\n  }\r\n  getUsersByBoard(board_id: number): Observable<IUser[]>{\r\n    return this.httpClient.get<IUser[]>(URL_BACKEND + \"notification/users/\" + board_id);\r\n  }\r\n  deleteNotificationByUser(): Observable<any>{\r\n    return this.httpClient.delete(URL_BACKEND + \"notification\")\r\n  }\r\n  getListNoticeUser(users: IUser[]): IUser[]{\r\n    for (let i = 0; i < users.length; i++) {\r\n      if (this.authenService.currentUserValue.id == users[i].id) users.splice(i,1);\r\n    }\r\n    return users;\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {LoginServiceService} from '../../service/loginService/login-service.service';\r\nimport {AuthenService} from '../../service/authenServie/authen.service';\r\n\r\n@Component({\r\n  selector: 'app-log-out',\r\n  templateUrl: './log-out.component.html',\r\n  styleUrls: ['./log-out.component.scss']\r\n})\r\nexport class LogOutComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private loginService: LoginServiceService, private authenService: AuthenService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logOutUser() {\r\n    this.authenService.logout();\r\n    this.router.navigateByUrl(\"/login\");\r\n  }\r\n\r\n}\r\n","<button (click) = logOutUser() class=\"btn btn-danger\">Logout</button>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {BoardModule} from \"./board/board.module\";\r\nimport {ShowListComponent} from \"./list/show-list/show-list.component\";\r\nimport {SearchCardComponent} from './card/search-card/search-card.component';\r\nimport {CommentComponent} from \"./card/comment/comment.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'board/:id',\r\n    component: ShowListComponent\r\n  },\r\n  {\r\n    path: '',\r\n    loadChildren: () => import(\"./form-login/form-login.module\").then(module => module.FormLoginModule)\r\n  },\r\n  {\r\n    path:'search/card',\r\n    component:SearchCardComponent\r\n  },\r\n\r\n  {\r\n    path:'comments/card/:id',\r\n    component:CommentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule, BoardModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '../../../environments/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {IComment} from '../../interface/i-comment';\r\nimport {Observable} from 'rxjs';\r\nconst API_BACKEND = environment.api_url\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  createComment(comment:IComment):Observable<any>{\r\n    return  this.httpClient.post<IComment>(API_BACKEND+\"comments/create\",comment);\r\n  }\r\n  getAllComment(cardId:number):Observable<IComment[]>{\r\n    return this.httpClient.get<IComment[]>(API_BACKEND+\"comments/card/\"+cardId)\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {ICard} from '../../interface/i-card';\r\nimport {CardService} from '../../service/cardService/card.service';\r\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\r\nimport {IUser} from '../../interface/i-user';\r\nimport {UserService} from '../../service/user/user.service';\r\nimport {NoticficationService} from '../../service/notificationService/noticfication.service';\r\nimport {INotification} from '../../interface/i-notification';\r\nimport {AuthenService} from '../../service/authenServie/authen.service';\r\n\r\n\r\n// @ts-ignore\r\n@Component({\r\n  selector: 'app-show-card-by-list-id',\r\n  templateUrl: './show-card-by-list-id.component.html',\r\n  styleUrls: ['./show-card-by-list-id.component.scss']\r\n})\r\nexport class ShowCardByListIdComponent implements OnInit {\r\n  @Input()\r\n  list_id: any = 0;\r\n  card_id: any = 0;\r\n  users: IUser[] = [];\r\n  cards: ICard[] =[];\r\n  userList: IUser[] =[];\r\n\r\n  constructor(private cardService: CardService, private userService: UserService,\r\n              private noticficationService: NoticficationService, private authenService: AuthenService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showCardsByListId(this.list_id);\r\n  }\r\n  showCardsByListId(id: number){\r\n    this.cardService.findCardsByListId(id).subscribe(result => {\r\n      this.cards = result;\r\n    })\r\n  }\r\n\r\n  drop(event: CdkDragDrop<ICard[]>) {\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n      this.changePositionCard(event.container.data);\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data,\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex);\r\n      // @ts-ignore\r\n      event.container.data[event.currentIndex].list.id = event.container.id;\r\n      this.changePositionCard(event.container.data);\r\n    }\r\n    this.changeNotification(event.container.data[event.currentIndex]);\r\n  }\r\n  @Output()\r\n  isChanged = new EventEmitter();\r\n  changeOutput(){\r\n    this.isChanged.emit(true)\r\n  }\r\n  changePositionCard(cards: ICard[]){\r\n    for (let i = 0; i < cards.length; i++) {\r\n      cards[i].position = i;\r\n    }\r\n    this.cardService.changePositionCard(cards).subscribe(() =>{\r\n    })\r\n  }\r\n  changeNotification(card: any){\r\n    // @ts-ignore\r\n    this.noticficationService.getUsersByBoard(card.list.board?.id).subscribe(users => {\r\n      this.userList = this.noticficationService.getListNoticeUser(users);\r\n      let notification: INotification = {\r\n        content: this.authenService.currentUserValue.username + \" change position of card: \" + card.title,\r\n        appUser: this.userList\r\n      }\r\n      console.log(notification)\r\n      this.noticficationService.createNotification(notification);\r\n\r\n    })\r\n  }\r\n}\r\n","<div class=\"tasks-container\"\r\n     cdkDropList\r\n     id=\"{{list_id}}\"\r\n     [cdkDropListData]=\"cards\"\r\n     (cdkDropListDropped)=\"drop($event)\">\r\n  <div class=\"task cdkDragPosition\" *ngFor=\"let item of cards\" cdkDrag>\r\n    <div  style=\"position: absolute; right: 0px; top: 0px\"><app-detail-card [card_id]=\"item.id\" (isUpdate)=\"changeOutput()\"></app-detail-card></div>\r\n    <table>\r\n      <tr>{{ item.title }}</tr>\r\n      <tr>\r\n        <td><h5>Member is tag:</h5>\r\n        <app-show-tag-user-card [card_id]=\"item.id\"></app-show-tag-user-card>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n   </div>\r\n  <div class=\"task\" ><app-create-card [list_id]=\"list_id\" (isCreated)=\"changeOutput()\"></app-create-card></div>\r\n</div>\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}